{"version":3,"sources":["auth.http.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAIA;gBAII,YAAY,IAAU;oBAHtB,SAAI,GAAG,IAAI,CAAC;oBACZ,YAAO,GAAG,MAAM,CAAC;oBAGb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACrB,CAAC;gBAED,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE;oBACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACpC,CAAC;gBAED,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE;oBACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC3C,CAAC;gBAED,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE;oBACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC1C,CAAC;gBAED,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE;oBACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACvC,CAAC;gBAED,aAAa,CAAC,IAAS;oBACnB,IAAI,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC3C,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;wBACZ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;4BAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gCACvB,IAAI,CAAC,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;4BACjC,CAAC;4BACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;wBACrE,CAAC;oBACL,CAAC;gBACL,CAAC;YACL,CAAC;YA1CD;gBAAC,iBAAU,EAAE;;wBAAA;YACb,+BAyCC,CAAA","file":"auth.http.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Headers} from '@angular/http';\r\n\r\n@Injectable()\r\nexport class AuthHttp {\r\n    http = null;\r\n    authKey = \"auth\";\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n    }\r\n\r\n    get(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.get(url, opts);\r\n    }\r\n\r\n    post(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.post(url, data, opts);\r\n    }\r\n\r\n    put(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.put(url, data, opts);\r\n    }\r\n\r\n    delete(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.delete(url, opts);\r\n    }\r\n\r\n    configureAuth(opts: any) {\r\n        var i = localStorage.getItem(this.authKey);\r\n        if (i != null) {\r\n            var auth = JSON.parse(i);\r\n            console.log(auth);\r\n            if (auth.access_token != null) {\r\n                if (opts.headers == null) {\r\n                    opts.headers = new Headers();\r\n                }\r\n                opts.headers.set(\"Authorization\", `Bearer ${auth.access_token}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}