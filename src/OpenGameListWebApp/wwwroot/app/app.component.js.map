{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YA2DA;gBAGI,YACW,MAAc,EACd,WAAwB,EACxB,IAAY;oBAFZ,WAAM,GAAN,MAAM,CAAQ;oBACd,gBAAW,GAAX,WAAW,CAAa;oBACxB,SAAI,GAAJ,IAAI,CAAQ;oBALvB,UAAK,GAAG,cAAc,CAAC;oBAMnB,EAAE,CAAC,CAAC,CAAO,MAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;wBACvC,IAAI,IAAI,GAAG,IAAI,CAAC;wBACV,MAAO,CAAC,qBAAqB,GAAG,UAAU,IAAI;4BAChD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gCACV,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;4BACrC,CAAC,CAAC,CAAC;wBACP,CAAC,CAAA;oBACL,CAAC;gBACL,CAAC;gBAED,QAAQ,CAAC,IAAW;oBAChB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAC/B,IAAI,CAAC,CAAC;gBACd,CAAC;gBAED,MAAM;oBACF,yDAAyD;oBACzD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM;wBACtC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;4BACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC/B,CAAC;oBACL,CAAC,CAAC,CAAC;oBACH,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,qBAAqB,CAAC,IAAS;oBAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBAC/B,OAAO,CAAC,GAAG,CAAC,uCAAuC;0BAC7C,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,YAAY,CAAC,CAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC/B,CAAC;YACL,CAAC;YA9FD;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAkDT;iBACJ,CAAC;;4BAAA;YAEF,uCAuCC,CAAA","file":"app.component.js","sourcesContent":["import {Component, NgZone} from \"@angular/core\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Component({\r\n    selector: \"opengamelist\",\r\n    template: `\r\n<nav class=\"navbar navbar-default navbar-fixed-top\">\r\n    <div class=\"container-fluid\">\r\n        <input type=\"checkbox\" id=\"navbar-toggle-cbox\">\r\n        <div class=\"navbar-header\">\r\n            <label for=\"navbar-toggle-cbox\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\r\n                <span class=\"sr-only\">Toggle navigation</span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </label>\r\n            <a class=\"navbar-brand\" href=\"javascript:void(0)\">\r\n                <img alt=\"logo\" src=\"/img/logo.svg\" />\r\n            </a>\r\n        </div>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbar\">\r\n            <ul class=\"nav navbar-nav\">\r\n\r\n                <!-- Navigation commands for everyone -->\r\n                <li [class.active]=\"isActive([''])\">\r\n                    <a class=\"home\" [routerLink]=\"['']\">Home</a>\r\n                </li>\r\n                <li [class.active]=\"isActive(['about'])\">\r\n                    <a class=\"about\" [routerLink]=\"['about']\">About</a>\r\n                </li>\r\n\r\n                <!-- Navigation commands for authenticated users -->\r\n                <li *ngIf=\"authService.isLoggedIn()\" [class.active]=\"isActive(['item/edit', 0])\">\r\n                    <a class=\"add\" [routerLink]=\"['item/edit', 0]\">Add New</a>\r\n                </li>\r\n\r\n                <!-- Account-related commands -->\r\n                <li *ngIf=\"!authService.isLoggedIn()\" class=\"right\" [class.active]=\"isActive(['login']) || isActive(['register'])\">\r\n                    <a class=\"login\" [routerLink]=\"['login']\">Login / Register</a>\r\n                </li>\r\n                <li *ngIf=\"authService.isLoggedIn()\" class=\"right\">\r\n                    <a class=\"logout\" href=\"javascript:void(0)\" (click)=\"logout()\">Logout</a>\r\n                </li>\r\n                <li *ngIf=\"authService.isLoggedIn()\" class=\"right\" [class.active]=\"isActive(['account'])\">\r\n                    <a [routerLink]=\"['account']\">Edit Account</a>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n<h1 class=\"header\">{{title}}</h1>\r\n<div class=\"main-container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n    `\r\n})\r\n\r\nexport class AppComponent {\r\n    title = \"OpenGameList\";\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public authService: AuthService,\r\n        public zone: NgZone) {\r\n        if (!(<any>window).externalProviderLogin) {\r\n            var self = this;\r\n            (<any>window).externalProviderLogin = function (auth) {\r\n                self.zone.run(() => {\r\n                    self.externalProviderLogin(auth);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    isActive(data: any[]): boolean {\r\n        return this.router.isActive(\r\n            this.router.createUrlTree(data),\r\n            true);\r\n    }\r\n\r\n    logout(): boolean {\r\n        // logs out the user, then redirects him to Welcome View.\r\n        this.authService.logout().subscribe(result => {\r\n            if (result) {\r\n                this.router.navigate([\"\"]);\r\n            }\r\n        });\r\n        return false;\r\n    }\r\n\r\n    externalProviderLogin(auth: any) {\r\n        this.authService.setAuth(auth);\r\n        console.log(\"External Login successful! Provider: \"\r\n            + this.authService.getAuth().providerName);\r\n        this.router.navigate([\"\"]);\r\n    }\r\n}\r\n"]}